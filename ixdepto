#!/usr/bin/perl
use AppMercado;

#INFO: informe por depto, con resumen por piso y por edificio

logm("DBG",9,"Comienzo de reporte",);

my $mem={};
my %global;

$edificioCur='';
$pisoCur='';
my %tote=();
my %totp= (); 
dbFindFold('T="deptos" AND TIPO="DEPARTAMENTO"',{},['nombre','piso'],sub { my ($r)= @_;
	my $d= $r->{DEPTOS};
	#DBG: ficha 
	if ($edificioCur ne $d->{NOMBRE}) {
		out("CAMBIA: EDIFICIO!\n");	
		if ($tote{CNT}) { #A: hay deptos
			foreach my $c (qw/USDxM2 USDxM2Cubierto/) {
				$tote{$c}= $tote{$c}/$tote{CNT};
			}
			out(join("",map("$_:\t$tote{$_}\n",sort(keys(%tote)))) . ("-" x 75) . "\n");
		}
		$edificioCur= $d->{NOMBRE};
		$pisoCur= $d->{PISO};
		%tote=();
		%totp=();
	}
	elsif ($pisoCur ne $d->{PISO}) {
		out("CAMBIA: PISO!\n");
		if ($totp{CNT}) { #A: hay deptos
		foreach my $c (qw/USDxM2 USDxM2Cubierto/) {
			$totp{$c}= $totp{$c}/$totp{CNT};
		}
		out(join("",map("$_:\t$totp{$_}\n",sort(keys(%totp)))) . ("-" x 75) . "\n");
		}
		$pisoCur= $d->{PISO};
		%totp=();
	}
	$d->{VALOR}=~ s/\D//g;
	$d->{METROS_TOTALES}||= $d->{METROS_CUBIERTOS};
	#XXX: hacer esto ANTES de meterlo en la base!
	#A: normalizados	
	$d->{USDxM2}= $d->{VALOR} / ($d->{METROS_TOTALES}||1);
	$d->{USDxM2Cubierto}= $d->{VALOR} / ($d->{METROS_CUBIERTOS}||1);
	#A: derivados
	$tote{CNT}++; $totp{CNT}++;
	foreach my $c (qw/USDxM2 USDxM2Cubierto METROS_TOTALES METROS_CUBIERTOS/) {
		$tote{$c}+= $d->{$c};
		$totp{$c}+= $d->{$c};
	}
	out(join("",map("$_:\t$d->{$_}\n",sort(keys(%$d)))) . ("-" x 75) . "\n");
});

open(IN,"<template.html"); $TPL= join("",<IN>); close(IN);
$html= $TPL; $html=~ s/\<\%=\s*OUT\s*\%\>/$OUT/;
print $html;
#DFTL: sub out { print join("", @_); }
#DFLT: sub outf { printf(@_); }
sub out { $OUT.= join("", @_); }
sub outf { my ($fmt, @args)= @_; $OUT.= sprintf($fmt,@args); }
